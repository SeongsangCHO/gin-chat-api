import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import React from "react";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const socketRef = React.useRef<WebSocket>();
  const chatSendInputRef = React.useRef<HTMLInputElement>(null);

  React.useEffect(() => {
    socketRef.current = new WebSocket("ws://localhost:8080");
    if (!socketRef.current) return;
    const socket = socketRef.current;
    socket.addEventListener("open", (event) => {
      console.log("WebSocket connected");
      socket.send("Hello Server!");
    });

    socket.addEventListener("message", (event) => {
      console.log("Received message:", event.data);
      // setSocketMessage(event.data);
    });

    socket.addEventListener("close", (event) => {
      console.log("WebSocket closed:", event);
    });

    socket.addEventListener("error", (event) => {
      console.log("WebSocket error:", event);
    });

    window.addEventListener("beforeunload", () => {
      socket.close();
    });

    if (chatSendInputRef.current) chatSendInputRef.current.focus();
  }, []);

  const handleChatSend = (e: React.FormEvent) => {
    e.preventDefault();
    if (!socketRef.current) return;
    const socket = socketRef.current;
    const chatSendInput = chatSendInputRef.current;
    if (!chatSendInput) return;
    const chat = chatSendInput.value;
    socket.send(chat);
    //send Chat to server;
    // do something...
    //send Chat to server;
    if (!chat) return;
    chatSendInput.value = "";
  };
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1 className={styles.title}>Chat</h1>
        <section className={styles.chatSection}>
          <div className={styles.chatList}></div>

          <form className={styles.chatSender} onSubmit={handleChatSend}>
            <input type="text" ref={chatSendInputRef} autoFocus />
            <button type="submit">Send</button>
          </form>
        </section>
      </main>
    </>
  );
}
